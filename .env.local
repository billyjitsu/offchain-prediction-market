# Template for Hardhat environment variables.

# To use this template, copy this file, rename it .env, and fill in the values. Do not use these mock values when
# deploying your LensAPI Oracle.

# If not set, we provide default values (check `hardhat.config.ts`) so developers can start prototyping out of the box,
# but we recommend getting your own API Keys for Production Apps.

# To access the values stored in this .env file you can use: process.env.VARIABLENAME
POLYGON_RPC_URL="https://polygon.g.alchemy.com/v2/<API-KEY>"
MUMBAI_RPC_URL="https://rpc.ankr.com/scroll_sepolia_testnet"
DEPLOYER_PRIVATE_KEY=0x54470b8bcb4329dd926594165409c9a33941ecb37451765d00752faf79ed2a81   // dead
POLYGONSCAN_API_KEY=DNXJA8RX2Q3VZ4URQIWP7Z68CJXQZSC6AW // dead

# More info can be found in the `README.md`. For Polgon mainnet deployments of the LensAPI Oracle at https://bricks.phala.network,
# set the `POLYGON_LENSAPI_ORACLE_ENDPOINT`.
# For Polygon Mumbai testnet deployments of the LensAPI Oracle at https://bricks-poc5.phala.network set the `MUMBAI_LENSAPI_ORACLE_ENDPOINT`.
POLYGON_LENSAPI_ORACLE_ENDPOINT=
MUMBAI_LENSAPI_ORACLE_ENDPOINT=0xa90a3693e7b01728cef6efe58f7a48278019cc63  // on scroll sepolia testnet (labeled for ease of script)

# After executing the `npx hardhat deploy --network <network>`, the deployed consumer contract address will be returned
# that address should be set to `POLYGON_CONSUMER_CONTRACT_ADDRESS` for Polygon mainnet deployment and `MUMBAI_CONSUMER_CONTRACT_ADDRESS`
# for Polygon Mumbai testnet deployment
POLYGON_CONSUMER_CONTRACT_ADDRESS=
MUMBAI_CONSUMER_CONTRACT_ADDRESS=0xFefDadb1c553a2d19ED43F6Aab0C7251470db1BA

# The encypt passphrase for the exported polkadot wallet JSON file.
# If you import your polkadot-account.json file then define POLKADOT_WALLET_PASSPHRASE
# Else define POLKADOT_WALLET_SURI (ex. POLKADOT_WALLET_SURI=//ALICE or POLKADOT_WALLET_SURI="this is a mnemonic phrase")
POLKADOT_WALLET_PASSPHRASE=
POLKADOT_WALLET_SURI="raven valley laugh wait"

# When calling the yarn update-function, ensure that you set the WORKFLOW_ID to the Phat Contract function workflow you want to update.
WORKFLOW_ID=
